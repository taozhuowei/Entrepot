{"remainingRequest":"F:\\NodeModules\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\TZW\\Entrepot\\CodeSnippet\\级联下拉选择器\\cascader.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\TZW\\Entrepot\\CodeSnippet\\级联下拉选择器\\cascader.vue","mtime":1626507967757},{"path":"F:\\NodeModules\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\NodeModules\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\NodeModules\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXJyYXlUb1RyZWUgZnJvbSAiLi9hcnJheVRvVHJlZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogImNhc2NhZGVyIiwNCiAgcHJvcHM6IHsNCiAgICBkYXRhOiBBcnJheSwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdHJlZURhdGE6IFtdLCAvL+agkQ0KDQogICAgICB0cmVlRGVwdGg6IDAsIC8v5qCR55qE5rex5bqmDQoNCiAgICAgIHNlbGVjdExpc3Q6IFtdLA0KDQogICAgICBzZWxlY3Rpb25zOiB7fSwNCg0KICAgICAgb3B0aW9uczogew0KICAgICAgICAwOltdLA0KICAgICAgICAxOltdLA0KICAgICAgICAyOltdLA0KICAgICAgfSwNCiAgICB9Ow0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMudHJlZURhdGEgPSBhcnJheVRvVHJlZSh0aGlzLmRhdGEpOw0KICAgIHRoaXMudHJlZURlcHRoID0gdGhpcy5nZXREZXB0aCh0aGlzLnRyZWVEYXRhKTsNCg0KICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy50cmVlRGVwdGg7IGkrKykgew0KICAgICAgdGhpcy5zZWxlY3RMaXN0LnB1c2goaSk7DQogICAgICB0aGlzLnNlbGVjdGlvbnNbaV0gPSAiIjsNCiAgICAgIHRoaXMub3B0aW9uc1tpXSA9IFtdOw0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLnNlbGVjdGlvbkluaXQoKTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8v5Yid5aeL5YyW6YCJ6aG55pWw57uEDQogICAgc2VsZWN0aW9uSW5pdCgpIHsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMub3B0aW9ucyk7DQogICAgICB0aGlzLm9wdGlvbnNbMF0gPSB0aGlzLmZpbmRGcm9tVHJlZURhdGEoDQogICAgICAgIHRoaXMudHJlZURhdGFbMF0sDQogICAgICAgICJyb290Ig0KICAgICAgKS5jaGlsZHJlbjsNCiAgICAgIHRoaXMuc2VsZWN0aW9uc1swXSA9IHRoaXMub3B0aW9uc1swXVswXS52YWw7DQoNCiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlKDApOw0KICAgIH0sDQoNCiAgICAvLyBjaGFuZ2Xkuovku7blm57osIMNCiAgICBoYW5kbGVDaGFuZ2UoaW5kZXgpIHsNCiAgICAgIGNvbnN0IHJlcyA9IHRoaXMuZmluZEZyb21UcmVlRGF0YSgNCiAgICAgICAgdGhpcy50cmVlRGF0YVswXSwNCiAgICAgICAgdGhpcy5zZWxlY3Rpb25zW2luZGV4XQ0KICAgICAgKTsNCg0KICAgICAgaWYgKGluZGV4IDwgdGhpcy50cmVlRGVwdGgtMSkgew0KICAgICAgICB0aGlzLm9wdGlvbnNbaW5kZXggKyAxXSA9IHJlcy5jaGlsZHJlbjsNCiAgICAgICAgdGhpcy5zZWxlY3Rpb25zW2luZGV4ICsgMV0gPSByZXMuY2hpbGRyZW5bMF0udmFsOw0KICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZShpbmRleCArIDEpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS5sb2cocmVzKTsNCiAgICAgIH0NCiAgICB9LA0KDQogICAgLy8g6I635Y+W5qCR55qE5rex5bqmDQogICAgZ2V0RGVwdGgodHJlZURhdGEpIHsNCiAgICAgIGxldCB0ZW1wVHJlZSA9IHRyZWVEYXRhLmNvbmNhdCgpOw0KICAgICAgbGV0IGRlcHRoID0gMDsNCg0KICAgICAgd2hpbGUgKHRlbXBUcmVlLmxlbmd0aCA+IDApIHsNCiAgICAgICAgY29uc3QgdGVtcCA9IFtdOw0KDQogICAgICAgIGZvciAoY29uc3QgZWwgb2YgdGVtcFRyZWUpIHRlbXAucHVzaChlbCk7DQoNCiAgICAgICAgdGVtcFRyZWUgPSBbXTsNCg0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRlbXAubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICBpZiAodGVtcFtpXS5jaGlsZHJlbiAmJiB0ZW1wW2ldLmNoaWxkcmVuLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGVtcFtpXS5jaGlsZHJlbi5sZW5ndGg7IGorKykgew0KICAgICAgICAgICAgICB0ZW1wVHJlZS5wdXNoKHRlbXBbaV0uY2hpbGRyZW5bal0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIGlmICh0ZW1wVHJlZS5sZW5ndGggPj0gMCkgew0KICAgICAgICAgIGRlcHRoKys7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHJldHVybiBkZXB0aCAtIDE7DQogICAgfSwNCg0KICAgIC8qKg0KICAgICAqIOmBjeWOhuagkeW9oue7k+aehOaVsOaNruW5tuaJvuWIsOebruagh+iKgueCuQ0KICAgICAqIEBwYXJhbSBub2RlIOiKgueCuQ0KICAgICAqIEBwYXJhbSB2YWwg55uu5qCH5YC8DQogICAgICogQHBhcmFtIHZhbFBhdGgg55Sx5YC857uE5oiQ55qE6Lev5b6EDQogICAgICogQHBhcmFtIGxhYmVsUGF0aCDnlLHmoIfnrb7nu4TmiJDnmoTot6/lvoQNCiAgICAgKiBAcGFyYW0gbm9kZVBhdGgg55Sx6IqC54K557uE5oiQ55qE6Lev5b6EDQogICAgICogQHJldHJ1biByZXMgew0KICAgICAgICAgIHZhbHBhdGgsDQogICAgICAgICAgbGFiZWxQYXRoLA0KICAgICAgICAgIG5vZGVQYXRoLA0KICAgICAgICAgIGxhc3ROb2RlLCAvL+acgOWQjuS4gOS4quiKgueCuQ0KICAgICAgICAgIGxhc3RWYWwsIC8v5pyA5ZCO5LiA5Liq6IqC54K555qE5YC8DQogICAgICAgICAgbGFzdExhYmVsLCAvL+acgOWQjuS4gOS4quiKgueCueeahOagh+etvg0KICAgICAgICAgIGNoaWxkcmVuIC8vIOWtkOiKgueCueaVsOe7hA0KICAgICAqIH0NCiAgICAgKi8NCiAgICBmaW5kRnJvbVRyZWVEYXRhKG5vZGUsIHZhbCwgdmFsUGF0aCwgbGFiZWxQYXRoLCBub2RlUGF0aCkgew0KICAgICAgLy8g5Yid5aeL5YyW5p+l5om+6Lev5b6EDQogICAgICB2YWxQYXRoID0gdmFsUGF0aCB8fCBbXTsgLy8g5YC8DQogICAgICBsYWJlbFBhdGggPSBsYWJlbFBhdGggfHwgW107IC8vIOagh+etvg0KICAgICAgbm9kZVBhdGggPSBub2RlUGF0aCB8fCBbXTsgLy8g6IqC54K5DQoNCiAgICAgIC8vIOa3seaLt+i0nXBhdGgNCiAgICAgIGNvbnN0IHRlbXBWYWxQYXRoID0gdmFsUGF0aC5jb25jYXQoKTsNCiAgICAgIGNvbnN0IHRlbXBMYWJlbFBhdGggPSBsYWJlbFBhdGguY29uY2F0KCk7DQogICAgICBjb25zdCB0ZW1wTm9kZVBhdGggPSBub2RlUGF0aC5jb25jYXQoKTsNCg0KICAgICAgLy8g6K6w5b2V6Lev5b6EDQogICAgICB0ZW1wVmFsUGF0aC5wdXNoKG5vZGUudmFsKTsNCiAgICAgIHRlbXBMYWJlbFBhdGgucHVzaChub2RlLmxhYmVsKTsNCiAgICAgIHRlbXBOb2RlUGF0aC5wdXNoKG5vZGUpOw0KDQogICAgICAvLyDmn6Xmib4NCiAgICAgIGlmIChub2RlLnZhbCA9PT0gdmFsKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgdmFscGF0aDogdGVtcFZhbFBhdGguc2xpY2UoMSksDQogICAgICAgICAgbGFiZWxQYXRoOiB0ZW1wTGFiZWxQYXRoLnNsaWNlKDEpLA0KICAgICAgICAgIG5vZGVQYXRoOiB0ZW1wTm9kZVBhdGgsDQogICAgICAgICAgbGFzdE5vZGU6IG5vZGUsDQogICAgICAgICAgbGFzdFZhbDogbm9kZS52YWwsDQogICAgICAgICAgbGFzdExhYmVsOiBub2RlLmxhYmVsLA0KICAgICAgICAgIGNoaWxkcmVuOiBub2RlLmNoaWxkcmVuLA0KICAgICAgICB9Ow0KICAgICAgfQ0KICAgICAgaWYgKG5vZGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkgew0KICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIG5vZGUuY2hpbGRyZW4pIHsNCiAgICAgICAgICBjb25zdCByZXMgPSB0aGlzLmZpbmRGcm9tVHJlZURhdGEoDQogICAgICAgICAgICBjaGlsZCwNCiAgICAgICAgICAgIHZhbCwNCiAgICAgICAgICAgIHRlbXBWYWxQYXRoLA0KICAgICAgICAgICAgdGVtcExhYmVsUGF0aCwNCiAgICAgICAgICAgIHRlbXBOb2RlUGF0aA0KICAgICAgICAgICk7DQogICAgICAgICAgaWYgKHJlcykgcmV0dXJuIHJlczsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["cascader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cascader.vue","sourceRoot":".","sourcesContent":["<!-- 级联选择器（使用树形数组） -->\r\n<template>\r\n  <div class=\"cascader-container\">\r\n    <!-- <select v-model=\"selections[1]\" @change=\"handleChange(1)\">\r\n      <option\r\n        v-for=\"(item, index) in options[1]\"\r\n        :key=\"index\"\r\n        :value=\"item.val\"\r\n      >\r\n        {{ item.label }}\r\n      </option>\r\n    </select>\r\n\r\n    <select v-model=\"selections[2]\" @change=\"handleChange(2)\">\r\n      <option\r\n        v-for=\"(item, index) in options[2]\"\r\n        :key=\"index\"\r\n        :value=\"item.val\"\r\n      >\r\n        {{ item.label }}\r\n      </option>\r\n    </select>\r\n\r\n    <select v-model=\"selections[3]\" @change=\"handleChange(3)\">\r\n      <option\r\n        v-for=\"(item, index) in options[3]\"\r\n        :key=\"index\"\r\n        :value=\"item.val\"\r\n      >\r\n        {{ item.label }}\r\n      </option>\r\n    </select> -->\r\n    <select\r\n      v-for=\"(select, i) in selectList\"\r\n      :key=\"i\"\r\n      v-model=\"selections[i]\"\r\n      @change=\"handleChange(i)\"\r\n    >\r\n      <option v-for=\"(item, j) in options[select]\" :key=\"j\" :value=\"item.val\">\r\n        {{ item.label }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport arrayToTree from \"./arrayToTree\";\r\n\r\nexport default {\r\n  name: \"cascader\",\r\n  props: {\r\n    data: Array,\r\n  },\r\n  data() {\r\n    return {\r\n      treeData: [], //树\r\n\r\n      treeDepth: 0, //树的深度\r\n\r\n      selectList: [],\r\n\r\n      selections: {},\r\n\r\n      options: {\r\n        0:[],\r\n        1:[],\r\n        2:[],\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.treeData = arrayToTree(this.data);\r\n    this.treeDepth = this.getDepth(this.treeData);\r\n\r\n    for (let i = 0; i < this.treeDepth; i++) {\r\n      this.selectList.push(i);\r\n      this.selections[i] = \"\";\r\n      this.options[i] = [];\r\n    }\r\n  },\r\n  mounted() {\r\n    this.selectionInit();\r\n  },\r\n  methods: {\r\n    //初始化选项数组\r\n    selectionInit() {\r\n      console.log(this.options);\r\n      this.options[0] = this.findFromTreeData(\r\n        this.treeData[0],\r\n        \"root\"\r\n      ).children;\r\n      this.selections[0] = this.options[0][0].val;\r\n\r\n      this.handleChange(0);\r\n    },\r\n\r\n    // change事件回调\r\n    handleChange(index) {\r\n      const res = this.findFromTreeData(\r\n        this.treeData[0],\r\n        this.selections[index]\r\n      );\r\n\r\n      if (index < this.treeDepth-1) {\r\n        this.options[index + 1] = res.children;\r\n        this.selections[index + 1] = res.children[0].val;\r\n        this.handleChange(index + 1);\r\n      } else {\r\n        console.log(res);\r\n      }\r\n    },\r\n\r\n    // 获取树的深度\r\n    getDepth(treeData) {\r\n      let tempTree = treeData.concat();\r\n      let depth = 0;\r\n\r\n      while (tempTree.length > 0) {\r\n        const temp = [];\r\n\r\n        for (const el of tempTree) temp.push(el);\r\n\r\n        tempTree = [];\r\n\r\n        for (let i = 0; i < temp.length; i++) {\r\n          if (temp[i].children && temp[i].children.length > 0) {\r\n            for (let j = 0; j < temp[i].children.length; j++) {\r\n              tempTree.push(temp[i].children[j]);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (tempTree.length >= 0) {\r\n          depth++;\r\n        }\r\n      }\r\n      return depth - 1;\r\n    },\r\n\r\n    /**\r\n     * 遍历树形结构数据并找到目标节点\r\n     * @param node 节点\r\n     * @param val 目标值\r\n     * @param valPath 由值组成的路径\r\n     * @param labelPath 由标签组成的路径\r\n     * @param nodePath 由节点组成的路径\r\n     * @retrun res {\r\n          valpath,\r\n          labelPath,\r\n          nodePath,\r\n          lastNode, //最后一个节点\r\n          lastVal, //最后一个节点的值\r\n          lastLabel, //最后一个节点的标签\r\n          children // 子节点数组\r\n     * }\r\n     */\r\n    findFromTreeData(node, val, valPath, labelPath, nodePath) {\r\n      // 初始化查找路径\r\n      valPath = valPath || []; // 值\r\n      labelPath = labelPath || []; // 标签\r\n      nodePath = nodePath || []; // 节点\r\n\r\n      // 深拷贝path\r\n      const tempValPath = valPath.concat();\r\n      const tempLabelPath = labelPath.concat();\r\n      const tempNodePath = nodePath.concat();\r\n\r\n      // 记录路径\r\n      tempValPath.push(node.val);\r\n      tempLabelPath.push(node.label);\r\n      tempNodePath.push(node);\r\n\r\n      // 查找\r\n      if (node.val === val) {\r\n        return {\r\n          valpath: tempValPath.slice(1),\r\n          labelPath: tempLabelPath.slice(1),\r\n          nodePath: tempNodePath,\r\n          lastNode: node,\r\n          lastVal: node.val,\r\n          lastLabel: node.label,\r\n          children: node.children,\r\n        };\r\n      }\r\n      if (node.children.length > 0) {\r\n        for (const child of node.children) {\r\n          const res = this.findFromTreeData(\r\n            child,\r\n            val,\r\n            tempValPath,\r\n            tempLabelPath,\r\n            tempNodePath\r\n          );\r\n          if (res) return res;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]}]}